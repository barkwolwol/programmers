-- **JOIN**

-- 조건에 맞는 도서와 저자 리스트 출력하기 (LEVEL 2)
SELECT BOOK_ID, AUTHOR_NAME, TO_CHAR(PUBLISHED_DATE, 'YYYY-MM-DD') AS PUBLISHED_DATE
FROM BOOK
JOIN AUTHOR USING (AUTHOR_ID)
WHERE CATEGORY = '경제'
ORDER BY 3;


-- 상품 별 오프라인 매출 구하기 (LEVEL 2)
SELECT PRODUCT_CODE, SUM(PRICE * SALES_AMOUNT) AS SALES
FROM PRODUCT
JOIN OFFLINE_SALE USING (PRODUCT_ID)
GROUP BY PRODUCT_CODE
ORDER BY 2 DESC, 1;


-- 없어진 기록 찾기 (LEVEL 3)
SELECT O.ANIMAL_ID, O.NAME
FROM ANIMAL_OUTS O
LEFT JOIN ANIMAL_INS I ON (I.ANIMAL_ID = O.ANIMAL_ID)
WHERE I.DATETIME IS NULL
ORDER BY 1;

SELECT ANIMAL_ID, NAME
FROM ANIMAL_OUTS A
WHERE NOT EXISTS (SELECT 1 FROM ANIMAL_INS WHERE ANIMAL_ID = A.ANIMAL_ID)
ORDER BY 1;


-- 있었는데요 없었습니다 (LEVEL 3)
SELECT I.ANIMAL_ID, I.NAME
FROM ANIMAL_INS I
JOIN ANIMAL_OUTS O ON (I.ANIMAL_ID = O.ANIMAL_ID)
WHERE I.DATETIME > O.DATETIME
ORDER BY I.DATETIME;


-- 오랜 기간 보호한 동물(1) (LEVEL 3)
SELECT I.NAME, I.DATETIME
FROM ANIMAL_INS I
LEFT JOIN ANIMAL_OUTS O ON (I.ANIMAL_ID = O.ANIMAL_ID)
WHERE O.ANIMAL_ID IS NULL
ORDER BY 2
FETCH FIRST 3 ROWS ONLY;

SELECT *
FROM (
    SELECT I.NAME, I.DATETIME
    FROM ANIMAL_INS I
    LEFT JOIN ANIMAL_OUTS O ON (I.ANIMAL_ID = O.ANIMAL_ID)
    WHERE O.ANIMAL_ID IS NULL
    ORDER BY 2
)
WHERE ROWNUM <= 3;


-- 주문량이 많은 아이스크림들 조회하기 (LEVEL 4)
SELECT F.FLAVOR
FROM FIRST_HALF F
JOIN JULY J ON (F.FLAVOR = J.FLAVOR)
GROUP BY F.FLAVOR
ORDER BY SUM(F.TOTAL_ORDER) + SUM(J.TOTAL_ORDER) DESC
FETCH FIRST 3 ROWS ONLY;

SELECT *
FROM (
    SELECT F.FLAVOR
    FROM FIRST_HALF F
    JOIN JULY J ON (F.FLAVOR = J.FLAVOR)
    GROUP BY F.FLAVOR
    ORDER BY SUM(F.TOTAL_ORDER) + SUM(J.TOTAL_ORDER) DESC
)
WHERE ROWNUM <= 3;

SELECT FLAVOR
FROM (
    SELECT F.FLAVOR, SUM(F.TOTAL_ORDER) + SUM(J.TOTAL_ORDER)
    FROM FIRST_HALF F
    JOIN JULY J ON (F.FLAVOR = J.FLAVOR)
    GROUP BY F.FLAVOR
    ORDER BY 2 DESC
)
WHERE ROWNUM <= 3;


-- 특정 기간동안 대여 가능한 자동차들의 대여비용 구하기 (LEVEL 4)
SELECT *
FROM (
    SELECT CAR_ID, CAR_TYPE, (DAILY_FEE * 30 * (100 - DISCOUNT_RATE) / 100) AS FEE
    FROM CAR_RENTAL_COMPANY_CAR
    JOIN CAR_RENTAL_COMPANY_DISCOUNT_PLAN USING (CAR_TYPE)
    WHERE DURATION_TYPE LIKE ('30%') AND CAR_TYPE IN ('세단', 'SUV')
)
WHERE CAR_ID NOT IN (
    SELECT CAR_ID
    FROM CAR_RENTAL_COMPANY_RENTAL_HISTORY 
    WHERE START_DATE < TO_DATE('2022-12-01', 'YYYY-MM-DD')
    AND END_DATE > TO_DATE('2022-10-31', 'YYYY-MM-DD')
    -- WHERE TO_CHAR(START_DATE, 'YYYY-MM-DD') < '2022-12-01'
    -- AND TO_CHAR(END_DATE, 'YYYY-MM-DD') >'2022-10-31'
)
AND FEE >= 500000 AND FEE < 2000000
ORDER BY 3 DESC, 2, 1 DESC


